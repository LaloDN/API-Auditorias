// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestAPI.Presistence.Context;

namespace RestAPI.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20211029032011_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RestAPI.Domain.Models.Auditoria", b =>
                {
                    b.Property<int>("IdAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varChar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varChar(50)");

                    b.Property<int>("IdDepartamento_Auditoria")
                        .HasColumnType("int");

                    b.HasKey("IdAuditoria");

                    b.HasIndex("IdDepartamento_Auditoria");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("RestAPI.Domain.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasColumnType("varChar(50)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("RestAPI.Domain.Models.Pregunta", b =>
                {
                    b.Property<int>("IdPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varChar(60)");

                    b.HasKey("IdPregunta");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("RestAPI.Domain.Models.PreguntaRespuesta", b =>
                {
                    b.Property<int>("IdPreguntaRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdAuditoria_PreguntaRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdPregunta_PreguntaRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdRespuesta_PreguntaRespuesta")
                        .HasColumnType("int");

                    b.HasKey("IdPreguntaRespuesta");

                    b.HasIndex("IdAuditoria_PreguntaRespuesta");

                    b.HasIndex("IdPregunta_PreguntaRespuesta");

                    b.HasIndex("IdRespuesta_PreguntaRespuesta");

                    b.ToTable("Pregunta_Respuesta");
                });

            modelBuilder.Entity("RestAPI.Domain.Models.Respuesta", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varChar(20)");

                    b.HasKey("IdRespuesta");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("RestAPI.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RestAPI.Domain.Models.Auditoria", b =>
                {
                    b.HasOne("RestAPI.Domain.Models.Departamento", "Departamento")
                        .WithMany("Auditorias")
                        .HasForeignKey("IdDepartamento_Auditoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestAPI.Domain.Models.PreguntaRespuesta", b =>
                {
                    b.HasOne("RestAPI.Domain.Models.Auditoria", "Auditoria")
                        .WithMany("PreguntaRespuestas")
                        .HasForeignKey("IdAuditoria_PreguntaRespuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestAPI.Domain.Models.Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("IdPregunta_PreguntaRespuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestAPI.Domain.Models.Respuesta", "Respuesta")
                        .WithMany()
                        .HasForeignKey("IdRespuesta_PreguntaRespuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
